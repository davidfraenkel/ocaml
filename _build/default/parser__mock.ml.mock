
type token = 
  | TO
  | INT of (
# 6 "parser.mly"
       (int)
# 8 "parser__mock.ml.mock"
)
  | ID of (
# 7 "parser.mly"
       (string)
# 13 "parser__mock.ml.mock"
)
  | FOR
  | EQUAL
  | EOF

# 1 "parser.mly"
  
  open Ast

# 23 "parser__mock.ml.mock"

let menhir_begin_marker =
  0

and (xv_stmt, xv_main) =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 18 "parser.mly"
                       _6
# 32 "parser__mock.ml.mock"
   : (
# 6 "parser.mly"
       (int)
# 36 "parser__mock.ml.mock"
  )) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 18 "parser.mly"
                    _5
# 40 "parser__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 18 "parser.mly"
                _4
# 44 "parser__mock.ml.mock"
   : (
# 6 "parser.mly"
       (int)
# 48 "parser__mock.ml.mock"
  )) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 18 "parser.mly"
          _3
# 52 "parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 18 "parser.mly"
       _2
# 56 "parser__mock.ml.mock"
   : (
# 7 "parser.mly"
       (string)
# 60 "parser__mock.ml.mock"
  )) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 18 "parser.mly"
   _1
# 64 "parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : 'tv_stmt ->
    
# 18 "parser.mly"
                            (
      For(_2, _4, _6)
    )
# 71 "parser__mock.ml.mock"
     in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 14 "parser.mly"
        _2
# 76 "parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 14 "parser.mly"
   _1
# 80 "parser__mock.ml.mock"
   : 'tv_stmt) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) : (
# 9 "parser.mly"
      (Ast.expr)
# 84 "parser__mock.ml.mock"
  ) ->
    (
# 14 "parser.mly"
             ( _1 )
# 89 "parser__mock.ml.mock"
     : 'tv_main) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_stmt * 'tv_main)

and menhir_end_marker =
  0
